- form_for(@item) do |f|
  - if @item.errors.any?
    %ul.errors
      - @item.errors.each do |field, msg|
        %li= msg

  = f.hidden_field :list_id
  - if @item.article.nil?
    - unless @articles.empty?
      %label
        %span= t '.product.existent'
        %select{ :name => "item[article_id]" }
          %option
          = options_from_collection_for_select(@articles, :id, :name)

    %label
      %span= t '.product.new'
      %input{ :name => "article[name]" }

  - else
    %label
      %span= Article.human_attribute_name(:name)
      = fields_for @item.article do |af|
        = af.text_field :name
        = af.hidden_field :id

  %label
    %span= Item.human_attribute_name(:price)
    = f.number_field :price, :min => 1, :step => 0.5, :value => @item.price.to_f / 100

  %label
    %span= Item.human_attribute_name(:quantity)
    = f.number_field :quantity, :min => 1

  %div.buttons
    - if @item.new_record?
      %button#add-item{ :type => :submit }= t '.buttons.add'
    - else
      %button#edit-item{ :type => :submit }= t '.buttons.edit'
    %a.button.cancel{ :href => list_path(@list) }= t '.buttons.cancel'

- unless @item.new_record?
  - form_for(@item, :url => { :action => :destroy }, :html => { :method => :delete }) do |f|
    %p= t '.note.destroy', :name => @item.article.name, :list => @list.name
    %div.buttons
      %button.destroy{ :type => :submit }= t '.buttons.destroy'
